<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="12" passed="8" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-19T19:17:51 TRT" name="Sample Suite" finished-at="2022-09-19T19:17:51 TRT" duration-ms="131">
    <groups>
      <group name="Smoke">
        <method signature="day2.Demo()[pri:0, instance:Testler.day2@5762806e]" name="Demo" class="Testler.day2"/>
        <method signature="day3.ApLogin()[pri:0, instance:Testler.day3@79ad8b2f]" name="ApLogin" class="Testler.day3"/>
        <method signature="day3.MobileSignin()[pri:0, instance:Testler.day3@79ad8b2f]" name="MobileSignin" class="Testler.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-09-19T19:17:51 TRT" name="Personel Loan" finished-at="2022-09-19T19:17:51 TRT" duration-ms="59">
      <class name="Testler.day1">
        <test-method signature="Demo(java.lang.String,java.lang.String)[pri:0, instance:Testler.day1@41ee392b]" started-at="2022-09-19T19:17:51 TRT" name="Demo" finished-at="2022-09-19T19:17:51 TRT" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[meb.gov.tr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[89751231424]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
      </class> <!-- Testler.day1 -->
      <class name="Testler.day2">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testler.day2@5762806e]" started-at="2022-09-19T19:17:51 TRT" name="beforeMethod" finished-at="2022-09-19T19:17:51 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Demo()[pri:0, instance:Testler.day2@5762806e]" started-at="2022-09-19T19:17:51 TRT" name="Demo" finished-at="2022-09-19T19:17:51 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:Testler.day2@5762806e]" started-at="2022-09-19T19:17:51 TRT" name="afterTest" finished-at="2022-09-19T19:17:51 TRT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Testler.day2 -->
    </test> <!-- Personel Loan -->
    <test started-at="2022-09-19T19:17:51 TRT" name="Car Loan" finished-at="2022-09-19T19:17:51 TRT" duration-ms="131">
      <class name="Testler.day2">
        <test-method is-config="true" signature="beforeSuit()[pri:0, instance:Testler.day2@5762806e]" started-at="2022-09-19T19:17:51 TRT" name="beforeSuit" finished-at="2022-09-19T19:17:51 TRT" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuit -->
      </class> <!-- Testler.day2 -->
      <class name="Testler.day3">
        <test-method is-config="true" signature="requirement()[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="requirement" finished-at="2022-09-19T19:17:51 TRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requirement -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="beforeClass" finished-at="2022-09-19T19:17:51 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="ApLogin()[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="ApLogin" finished-at="2022-09-19T19:17:51 TRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApLogin -->
        <test-method signature="webLogin()[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="webLogin" finished-at="2022-09-19T19:17:51 TRT" duration-ms="18" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at Testler.day3.webLogin(day3.java:13)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLogin -->
        <test-method signature="MobileLogOut()[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="MobileLogOut" finished-at="2022-09-19T19:17:51 TRT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogOut -->
        <test-method signature="MobileLogin(java.lang.String,java.lang.String)[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="MobileLogin" data-provider="getData" finished-at="2022-09-19T19:17:51 TRT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[usernam-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin -->
        <test-method signature="MobileLogin(java.lang.String,java.lang.String)[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="MobileLogin" data-provider="getData" finished-at="2022-09-19T19:17:51 TRT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[usernam-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin -->
        <test-method signature="MobileLogin(java.lang.String,java.lang.String)[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="MobileLogin" data-provider="getData" finished-at="2022-09-19T19:17:51 TRT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[usernam-3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password-3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin -->
        <test-method signature="MobileSignin()[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="MobileSignin" finished-at="2022-09-19T19:17:51 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignin -->
        <test-method signature="APIcarLoan()[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="APIcarLoan" finished-at="2022-09-19T19:17:51 TRT" depends-on-methods="Testler.day3.webLogin, Testler.day3.ApLogin" duration-ms="1" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testler.day3.APIcarLoan() on instance Testler.day3@79ad8b2f depends on not successfully finished methods 
[Testler.day3.webLogin() on instance Testler.day3@79ad8b2f
Testler.day3.ApLogin() on instance Testler.day3@79ad8b2f]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testler.day3.APIcarLoan() on instance Testler.day3@79ad8b2f depends on not successfully finished methods 
[Testler.day3.webLogin() on instance Testler.day3@79ad8b2f
Testler.day3.ApLogin() on instance Testler.day3@79ad8b2f]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:150)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APIcarLoan -->
        <test-method is-config="true" signature="lastExececution()[pri:0, instance:Testler.day3@79ad8b2f]" started-at="2022-09-19T19:17:51 TRT" name="lastExececution" finished-at="2022-09-19T19:17:51 TRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExececution -->
      </class> <!-- Testler.day3 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Sample Suite -->
</testng-results>
